<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Saison;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * retourne le nombre d'utilisateurs actifs
     * @return array
     */
    public function getNombreUserActifs()
    {
        $nbUserArray = $this->createQueryBuilder('u')
            ->select('count(u.id) nb')
            ->where('u.enabled = :actif')
            ->setParameter('actif', true)
            ->getQuery()
            ->getScalarResult();
        return reset($nbUserArray)['nb'];
    }


    /**
     * Retroune un user par sa date de naissance
     * @param \DateTime $naissance
     * @return mixed
     */
    public function findOneByDateNaissance(\DateTime $naissance)
    {
        return $this->createQueryBuilder('u')
            ->where('YEAR(u.dateNaissance) = :annee AND MONTH(u.dateNaissance) = :mois AND DAY(u.dateNaissance) = :jour')
            ->setParameter('annee', $naissance->format('Y'))
            ->setParameter('mois', $naissance->format('m'))
            ->setParameter('jour', $naissance->format('d'))
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * Retourne la reque^te pour obtenir la liste des utilisateurs
     * @param Saison $saison
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getQueryListeUser(Saison $saison)
    {
        return $this->createQueryBuilder('u')
            ->join('u.inscriptions', 'i')
            ->where('i.saison = :saison')
            ->setParameter('saison', $saison)
            ->addOrderBy('u.prenom', 'ASC')
            ->addOrderBy('u.nom', 'ASC')
            ->getQuery();
    }
}
